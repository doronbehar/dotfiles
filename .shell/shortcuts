# {{{1 Shortcut for transmission-remote with authentication through environment
if _command_exists transmission-remote; then
	alias trc='transmission-remote --authenv'
fi

# {{{1 replace shell script pass with gopass
if _command_exists gopass; then
	alias pass=gopass
fi

# {{{1 replace classic 'cal' command with that of khal
if _command_exists khal; then
	alias cal='khal --color calendar | head -25'
fi

# {{{1 nautilus
if _command_exists nautilus && _command_exists gio; then
	# nautilus here
	alias nau='gio open .'
fi

# {{{1 `maims` for quick selection screenshots
if _command_exists maim; then
	alias maims='maim --format=png -s -c 1,0,0.6'
fi

# {{{1 xclip / xsel / wl-{copy,paste}
# The existence / no existence of a command indicates the
if _command_exists wl-copy; then
	alias wlcp='wl-copy -p'
	alias wlpp='wl-paste -p'
	alias wlc='wl-copy'
	alias wlp='wl-paste'
elif _command_exists xsel; then
	# Xsel automatically detects if it's pasting or copying
	alias wlcp='xsel -p'
	alias wlpp='xsel -p'
	alias wlc='xsel -b'
	alias wlp='xsel -b'
elif _command_exists xclip; then
	# xclip automatically detects if it's pasting or copying
	alias wlcp="xclip -selection primary"
	alias wlpp="xclip -selection primary"
	alias wlc="xclip -selection clipboard"
	alias wlp="xclip -selection clipboard"
elif _command_exists clip.exe; then # On WSL
	alias wlcp="clip.exe"
	wlpp(){
		powershell.exe -c '[Console]::Out.Write($(Get-Clipboard -Raw).tostring().replace("`r", ""))'
	}
	alias wlc=wlcp
	alias wlp=wlpp
fi

# {{{1 xdg-open
if _command_exists gio; then
	alias o='gio open'
elif _command_exists xdg-open; then
	alias o='xdg-open'
fi

# {{{1 visual/editor related
# THE shortcut
alias v="${VISUAL}"
# GhostStart for quick launch
alias gvi="${VISUAL} +GhostStart"
# Start a note at NOTE_DIR (set in ~/.files.private)
pad() {
	${VISUAL} "${NOTE_DIR}/$(date +%Y-%m-%d_%H.%S).txt"
}
# Often one wishes to view a manual page without fooling troffi with a fake MANWIDTH, see .zshenv
manw(){
	env MANWIDTH=$COLUMNS man "$@"
}

vprofile() {
	$VISUAL \
		--cmd 'profile start profile.log' \
		--cmd 'profile func *' \
		--cmd 'profile file *' \
		"$@" && \
	$VISUAL profile.log && \
	rm -i profile.log
}
# It should also possible to configure this in /etc/sudoers, but it's much
# easier here
alias sudo="sudo --preserve-env=VISUAL,EDITOR,GIT_EDITOR"

# {{{1 `mkcd` mkdir and cd to it afterwards
mkcd(){
	mkdir -p "$1" && cd "$1"
}

# {{{1 `tmate` - terminal session
if _command_exists tmate; then
	alias tmux=tmate-wrapper.sh
fi

# {{{1 `oct` - for GNU Octave
if _command_exists octave; then
	alias oct=octave
fi

# {{{1 sed -e for any command from history
hsub(){
	local hist_index="$1"
	if [ -z "$hist_index" ]; then
		echo USAGE: hsub "<index>" "<sed filter>" >&2
		return 1
	fi
	shift
	local cmd_full="$(fc -l "$hist_index" "$hist_index")"
	if [ -z "$cmd_full" ]; then
		return 1
	fi
	local index
	IFS=" " read index cmd <<< "$cmd_full"
	if [[ -z "$@" ]]; then
		echo $((hist_index - 1)): $cmd
		return
	fi
	local cmd_file="$(mktemp -u -t hsub-cmd.XXXX)"
	echo We are going to run:
	echo =======
	echo $cmd | sed "$@" | tee "$cmd_file"
	echo =======
	echo "Are you sure it's OK?"
	read
	source "$cmd_file"
}

# vim: ft=zsh
