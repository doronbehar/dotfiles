if ! _command_exists task; then
	return
fi

zmodload zsh/system
zmodload -F zsh/stat b:zstat
zmodload -F zsh/files b:zf_mv

function t() {
	emulate -L zsh -o no_unset
	task rc.context=$_chpwd_taskwarrior_context "$@"
}

function tfzf() {
	emulate -L zsh -o no_unset
	taskfzf rc.context=$_chpwd_taskwarrior_context "$@"
}

# Sets _chpwd_taskwarrior_context.
function _chpwd_taskwarrior_init() {
	emulate -L zsh -o extended_glob -o no_unset -o warn_create_global -o warn_nested_var

	unset _chpwd_taskwarrior_context _chpwd_taskwarrior_context_data GIT_SEND_MAIL_TO
	_chpwd_taskwarrior_parse_contexts ~/.local/share/tasks/contexts.txt || return

	local -a ctx=(${(0)_chpwd_taskwarrior_contexts[(k)$PWD/]})
	if (( ! $#ctx )); then
		if [[ ${NETWORK_NAME-} == *Home* ]]; then
			ctx=(home)
		else
			ctx=(default)
		fi
	fi

	local realpwd=${PWD:A}

	local a=$PWD b=$realpwd
	while [[ $a != $b && -z ${_chpwd_taskwarrior_contexts[(k)$b/]} ]]; do
		_chpwd_taskwarrior_add_dir ~/.local/share/tasks/contexts.txt $a $b || return
		a=${a:h}
		b=${a:A}
	done

	typeset -g _chpwd_taskwarrior_context=$ctx[1]

	local opt
	for opt in ${ctx:1}; do
		case $opt in
			redirect-link)
				builtin cd -q -- $realpwd
			;;
			patches_mailing_list=*)
				export GIT_SEND_MAIL_TO=${opt#*=}
			;;
		esac
	done
}

function _chpwd_taskwarrior_parse_contexts() {
	emulate -L zsh -o extended_glob -o no_unset -o warn_create_global

	local -H stat
	zstat -H stat -- $1 || return
	local sig="$stat[inode] $stat[mtime] $stat[size]"

	if [[ $sig != ${_chpwd_taskwarrior_cached_sig-} ]]; then
		# Context file has changed. Parse it into _chpwd_taskwarrior_contexts.
		local line dir
		local -a lines dirs data match mbegin mend
		lines=(${(f)"$(<$1)"}) || return
		typeset -gA _chpwd_taskwarrior_contexts=()
		for line in $lines; do
			[[ $line == (#b)context.([a-zA-Z0-9._-]##)\.read=[^#]#'# '(/[^$'\n']#) ]] || continue
			data=$match[1]
			# Note: (z) without (Q) on the next line is likely a bug.
			dirs=(${(z)match[2]})
			if [[ $dirs[-1] == options:* ]]; then
				data+=$'\0'${${dirs[-1]#options:}//,/$'\0'}
				dirs[-1]=()
			fi
			_chpwd_taskwarrior_contexts+=("(${(j:|:)${(@b)dirs}})/*" $data)
		done
		typeset -g _chpwd_taskwarrior_cached_sig=$sig
	fi
}

# Adds directory $3 in front of $2 in file $1.
function _chpwd_taskwarrior_add_dir() {
	emulate -L zsh -o extended_glob -o no_unset -o warn_create_global -o warn_nested_var
	local -a lines match begin end
	lines=("${(@f)$(<$1)}") || return
	local tmp=$1.tmp.$$
	>$tmp print -rC1 -- ${(@)lines:/(#b)([^#]#'#'*)" $2"(| *)/$match[1]" $3 $2"$match[2]} || return
	zf_mv -f -- $tmp $1
}

typeset -ag chpwd_functions
chpwd_functions+=_chpwd_taskwarrior_init
_chpwd_taskwarrior_init

# vim:ft=zsh
